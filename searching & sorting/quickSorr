//quick sort 
#include <stdio.h>
void swap(int *a, int *b) {
    int temp = *a;
    *a=*b;
    *b=temp;
}

int partition(int arr[], int low, int high) {
    int pivot= arr[low];
    int i=low;
    for(int j=i+1;j<=high;j++)
    {
        if(arr[j]<=pivot)
        {
            i++;
            swap(&arr[i],&arr[j]);
        }
    }
    swap(&arr[i],&arr[low]);
    return i;
}

void quickSort(int arr[], int low, int high) {
    if(low<high)
    {
        int m=partition(arr,low,high);
        quickSort(arr,low,m-1);
        quickSort(arr,m+1,high);
    }
  }

int main() {
    int arr[] = {10, 7, 8, 9, 1, 5};
    int n = sizeof(arr) / sizeof(arr[0]);
    int low=0,high=n-1;
    quickSort(arr,low,high);
    for (int i = 0; i < n; i++) printf("%d ", arr[i]);
    return 0;
}